{"version":3,"sources":["components/input-block/inputBlock.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/spinner/index.js","components/spinner/spinner.js","components/item-list/index.js","components/item-list/item-list.js","components/message/index.js","components/message/message.js","components/sign-in/index.js","components/sign-in/sign-in.js","firebase.js","components/app/app.js","services/firebase-service.js","components/app/index.js","index.js"],"names":["InputBlock","onHandleChange","data","prevValue","title","type","name","value","required","currentMonth","className","disabled","onChange","e","target","defaultProps","ItemAddForm","state","iceWater","hotWaterBack","hotWater","gas","light","onSubmit","preventDefault","cb","props","onItemAdded","form","Number","month","Date","reset","handleChange","val","setState","oldItem","getTwoDigitDateFormat","monthOrDate","this","lastCounters","currentDate","renderDate","getFullYear","getMonth","defaultValue","Component","Spinner","role","ItemList","items","onItemDelete","Object","keys","length","sort","a","b","seconds","elements","values","map","item","id","renderTime","toDate","toLocaleDateString","year","key","onClick","message","msg","text","SignIn","onSignIn","password","placeholder","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","fireauth","auth","_apiBase","collection","collectIdsAndDocs","doc","get","snapshop","months","docs","add","docRef","newPost","delete","userID","onAuthStateChanged","user","uid","pass","userId","error","signInWithEmailAndPassword","then","res","catch","err","App","useState","setMonths","setMessage","userAuth","setUserAuth","setLastCounters","useEffect","async","getData","authStatus","fetchData","timerMsg","setTimeout","clearTimeout","itemAdd","old","window","confirm","itemDelete","newMonths","filter","signIn","resSignIn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f377a54.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst InputBlock = ({onHandleChange, data, prevValue}) => {\n  const {title, type = 'number', name, value, required = false} = data;\n  \n  const currentMonth = value - prevValue;\n  return (\n    \n    <div className=\"col-12 col-md-6\">\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <div className=\"mb-2\">{title}</div>\n            <div className=\"form-group\">\n              <input className=\"form-control\" value={prevValue} disabled />\n              <small className=\"form-text text-muted\">прошлый месяц</small>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"mb-2 text-secondary\">{currentMonth > 0 ? currentMonth : '...'}</div>\n            <div className=\"form-group\">\n              <input\n                type={type}\n                required={required}\n                name={name}\n                onChange={(e)=> onHandleChange(name, e.target.value)}\n                className=\"form-control\" />\n              <small className=\"form-text text-muted\">текущий месяц</small>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\nInputBlock.defaultProps = {\n  prevValue: 0\n}\nInputBlock.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.node,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ])\n  })\n}\n\nexport default InputBlock;","import React, { Component } from \"react\";\nimport InputBlock from '../input-block/inputBlock'\n\nexport default class ItemAddForm extends Component {\n  static defaultProps = {\n    lastCounters: {}\n  }\n  state = {\n    iceWater: { title: \"Холодна вода\", name: \"iceWater\", value: \"\", required: true },\n    hotWaterBack: { title: \"Г.В.В\", name: \"hotWaterBack\", value: \"\", required: true },\n    hotWater: { title: \"Горячая вода\", name: \"hotWater\", value: \"\" },\n    gas: { title: \"Газ\", name: \"gas\", value: \"\" },\n    light: { title: \"Свет\", name: \"light\", value: \"\" },\n  }\n\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const cb = this.props.onItemAdded;\n    const form = e.target;\n\n    const item = {\n      iceWater: Number(form.iceWater.value),\n      hotWater: Number(form.hotWater.value),\n      hotWaterBack: Number(form.hotWaterBack.value),\n      light: Number(form.light.value),\n      gas: Number(form.gas.value),\n      month: new Date(form.month.value)\n    };    \n    \n    cb(item);\n    form.reset();\n  };\n  handleChange = (name, val) => {\n    this.setState((state)=>{\n      const oldItem = state[name];\n      return {\n        [name]: {...oldItem, value: val}\n      }\n    });\n  }\n  getTwoDigitDateFormat = (monthOrDate) => (monthOrDate < 10) ? '0' + monthOrDate : monthOrDate;\n\n  render() {\n    const { onSubmit, handleChange, getTwoDigitDateFormat } = this;\n    const { lastCounters } = this.props;\n    const { iceWater, hotWaterBack, hotWater, gas, light } = this.state;\n\n    const currentDate = new Date();\n    const renderDate = `${currentDate.getFullYear()}-${getTwoDigitDateFormat(currentDate.getMonth() + 1)}`;\n\n    \n    \n    return (\n      <div className=\"col-md-8 mx-auto\">\n        <div className=\"d-flex justify-content-center\">\n          <form onSubmit={onSubmit}>\n            <div className=\"form-row\">\n              <InputBlock\n                onHandleChange={handleChange}\n                data={iceWater}\n                prevValue={lastCounters.iceWater} />\n\n              <InputBlock \n                onHandleChange={handleChange} \n                data={hotWaterBack} \n                prevValue={lastCounters.hotWaterBack} />\n\n              <InputBlock \n                onHandleChange={handleChange} \n                data={hotWater} \n                prevValue={lastCounters.hotWater} />\n\n              <InputBlock \n                onHandleChange={handleChange} \n                data={gas} \n                prevValue={lastCounters.gas} />\n\n              <InputBlock \n                onHandleChange={handleChange} \n                data={light} \n                prevValue={lastCounters.light} />\n\n              <div className=\"col\">\n                <div className=\"form-row\">\n                  <div className=\"col-12 mb-2\">\n                    <span className=\"text-success\">Месяц</span>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"form-group\">\n                      <input\n                        required\n                        type=\"month\"\n                        name=\"month\"\n                        defaultValue={renderDate}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-success\">\n              Добавить\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm;\n","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nconst spinner = () => {\n  return (\n    <div className=\"d-flex justify-content-center mt-5\">\n      <div className=\"spinner-border text-secondary\" role=\"status\">\n        <span className=\"sr-only\">Загрузка...</span>\n      </div>\n    </div>\n  );\n}\nexport default spinner;","import ItemList from \"./item-list\";\n\nexport default ItemList;\n","import React from \"react\";\nimport Spinner from \"../spinner\";\n\n\nconst ItemList = ({ items, onItemDelete }) => {\n  \n  if(items === null) {\n    return (\n      <div className=\"col-md-8 mx-auto mt-4\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  if (!Object.keys(items).length) {\n    return (\n      <div className=\"col-md-8 mx-auto mt-4\">\n        <p>Внесите первые данные.</p>\n      </div>\n    );\n  }\n\n  items.sort((a,b) => b.month.seconds - a.month.seconds);\n\n  const listItems = Object.values(items);\n  const elements = listItems.map(item => {\n    const { id, iceWater, hotWater, hotWaterBack, light, gas, month } = item;\n    const renderTime = month.toDate().toLocaleDateString('ua-UA', {month: 'numeric', year: 'numeric'});\n    \n    return (\n      <tr key={id}>\n        <td>{renderTime}</td>\n        <td>{iceWater}</td>\n        <td>{hotWater}</td>\n        <td>{hotWaterBack}</td>\n        <td>{light}</td>\n        <td>{gas}</td>\n        <td>\n          <button\n            onClick={() => onItemDelete(id)}\n            className=\"btn btn-danger btn-sm\"\n          >\n            <i className=\"far fa-trash-alt\"></i>\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"col-md-8 mx-auto mt-4\">\n      <h2 className=\"text-center\">История</h2>\n      <div className=\"table-responsive-xl\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Холодная вода</th>\n              <th>Горячая вода</th>\n              <th>Г.В.В</th>\n              <th>Свет</th>\n              <th>Газ</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>{elements}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import message from \"./message\";\n\nexport default message;\n","import React from \"react\";\nimport \"./message.css\";\n\nconst Message = ({ msg: {type = 1, text} }) => {\n  \n  if (!text) {\n    return null;\n  }\n  const wordType = [\"danger\", \"success\", \"warning\"];\n  return (\n    <div className=\"bMessage\">\n      <div className={`alert alert-${wordType[type]}`} role=\"alert\">\n        {text}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import SignIn from \"./sign-in\";\n\nexport default SignIn;\n","import React from 'react';\n\nconst SignIn = ({onSignIn}) => {\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    onSignIn(form.password.value);\n    form.reset();\n  }\n  return (\n    <div className=\"col-md-8 mx-auto\">\n        <div className=\"d-flex justify-content-center\">\n          <form onSubmit={onSubmit}>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <input className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-success\">\n                Войти\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n  )\n}\n\nexport default SignIn;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-auth\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCfM0byadtN0hT5NHZic-iIXuNByceebBM\",\n  authDomain: \"housing-meter.firebaseapp.com\",\n  databaseURL: \"https://housing-meter.firebaseio.com\",\n  projectId: \"housing-meter\",\n  storageBucket: \"housing-meter.appspot.com\",\n  messagingSenderId: \"1004021485217\",\n  appId: \"1:1004021485217:web:d6d4d3057749769353eae0\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n\nexport const firestore = firebase.firestore();\nexport const fireauth= firebase.auth();\n","import React, { useState, useEffect} from \"react\";\nimport ItemAddForm from \"../item-add-form\";\nimport ItemList from \"../item-list\";\nimport Message from \"../message\";\nimport SignIn from \"../sign-in\";\nimport FirebaseService from '../../services/firebase-service';\n\nconst firebase = new FirebaseService();\n\nconst App = () => {\n  const [months, setMonths] = useState([]);\n  const [message, setMessage] = useState({text: \"\"});\n  const [userAuth, setUserAuth] = useState(null);\n  const [lastCounters, setLastCounters] = useState({});\n  \n  useEffect(() => {\n    const fetchData = async () => {\n\n      const months = await firebase.getData();      \n      const userId = await firebase.authStatus();\n\n      setMonths(months);\n      setUserAuth(userId)\n      \n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n\n    setMonths(months => {\n      months.sort((a,b) => b.month.seconds - a.month.seconds);\n      setLastCounters(months[0]);\n\n      return months;\n    });\n    \n  }, [months]);\n\n  useEffect(() => { // clear message\n    const timerMsg = setTimeout(() => setMessage({text: \"\"}), 5000);\n    return () => clearTimeout(timerMsg);\n  }, [message]);\n \n\n\n  const ItemAdd = async item => {\n    const newPost = await firebase.itemAdd(item);\n\n    setMonths(old => [newPost, ...old]);\n    setMessage({ text: \"Показатели счетчиков успешно добавлены!\" });    \n  };\n\n  const ItemDelete = async id => {\n    let confirmAc = window.confirm(\"Вы действительно хотите удалить запись?\");\n    if (!confirmAc) return;\n\n    await firebase.itemDelete(id);\n    \n    const newMonths = months.filter(month => month.id !== id);\n    setMonths(newMonths);\n    setMessage({ text: \"Показатели счетчика удалены!\", type: 0 });    \n  };\n\n  const onSignIn = async pass => {\n    const resSignIn = await firebase.signIn(pass);\n    \n    if(resSignIn.error) {\n      setMessage({ text: resSignIn.error, type: 0}); \n    } else {\n      setUserAuth(resSignIn.userId)\n      setMessage({ text: \"Вы успешно вошли!\"}); \n    }\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Message msg={message} />\n        \n        { userAuth ? (\n          <div>\n            <ItemAddForm onItemAdded={ItemAdd} lastCounters={lastCounters} />\n            <ItemList items={months} onItemDelete={ItemDelete} />\n          </div>\n        ) : (\n          <SignIn onSignIn={onSignIn} />\n        )}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { firestore, fireauth } from \"../firebase\";\n\nexport default class FirebaseService {\n  _apiBase = firestore.collection('apartment/ODbPGN3kqlmPiQUhjc9Z/months/');\n\n  collectIdsAndDocs = (doc) => {\n    return {id: doc.id, ...doc.data()};\n  }\n\n  async getData() {\n    const snapshop = await this._apiBase.get();\n    const months = snapshop.docs.map(this.collectIdsAndDocs);\n\n    return months;\n  }\n\n  async itemAdd(item) {\n    const docRef = await this._apiBase.add(item);\n    const doc = await docRef.get();\n    const newPost = this.collectIdsAndDocs(doc);\n\n    return newPost;\n  }\n\n  async itemDelete(id) {\n    this._apiBase.doc(id).delete();\n  }\n\n  async authStatus() {\n    let userID = null;\n    await fireauth.onAuthStateChanged((user) => userID = user ? user.uid : null);\n    return userID;\n  }\n\n  async signIn(pass) {\n    let userId = null;\n    let error = false;\n    await fireauth.signInWithEmailAndPassword('prainua@gmail.com', pass)\n      .then(res => userId = res.user.uid)\n      .catch(err => error = err.message);\n\n    return {\n      userId,\n      error\n    };\n  }\n\n}","import App from \"./app\";\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}